<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <!--#region Gradients -->
    <Style x:Key="gradientBack"
           TargetType="Grid">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="1,0"
                                     MappingMode="RelativeToBoundingBox"
                                     StartPoint="0,1">
                    <GradientStop Color="#56C2B6"/>
                    <GradientStop Color="#94DBDF" Offset="0.5"/>
                    <GradientStop Color="#34A8A2" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="gradientAddEditWindow"
           TargetType="Grid">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="1,0"
                                     MappingMode="RelativeToBoundingBox"
                                     StartPoint="0,1">
                    <GradientStop Color="#1D1D1D"/>
                    <GradientStop Color="#2B2B2B" Offset="0.5"/>
                    <GradientStop Color="#666666" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region Admin Panel Page-->
    <Style x:Key="btnAdminPage"
           TargetType="Button">
        <Style.Setters>
            <Setter Property="Margin"
                    Value="50"/>

            <Setter Property="Background"
                    Value="#41C0C7"/>

            <Setter Property="Foreground"
                    Value="#000"/>

            <Setter Property="FontSize"
                    Value="24"/>

            <Setter Property="BorderBrush"
                    Value="#28767A"/>

            <Setter Property="BorderThickness"
                    Value="0.5"/>

            <Setter Property="Cursor"
                    Value="Hand"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="#489BA0"/>

                <Setter Property="BorderBrush"
                        Value="#255053"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="txtBlockTheaterName"
           TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Foreground"
                    Value="#FFF"/>

            <Setter Property="FontSize"
                    Value="44"/>

            <Setter Property="VerticalAlignment"
                    Value="Center"/>

            <Setter Property="HorizontalAlignment"
                    Value="Center"/>
        </Style.Setters>
    </Style>

    <Style x:Key="lViewItemContainerStyle"
           TargetType="ListViewItem">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                             Color="LightGray" />
        </Style.Resources>
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid>
                            <GridViewRowPresenter/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style x:Key="templateTxtBlock"
           TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Foreground"
                    Value="#FFF"/>

            <Setter Property="FontSize"
                    Value="20"/>

            <Setter Property="Margin"
                    Value="10 0 0 0"/>

            <Setter Property="TextWrapping"
                    Value="Wrap"/>
        </Style.Setters>
    </Style>

    <Style x:Key="btnEditMovie"
           TargetType="Button">
        <Style.Setters>
            <Setter Property="Background"
                    Value="#41C0C7"/>

            <Setter Property="Foreground"
                    Value="#000"/>

            <Setter Property="FontSize"
                    Value="14"/>

            <Setter Property="BorderBrush"
                    Value="#28767A"/>

            <Setter Property="BorderThickness"
                    Value="0.5"/>

            <Setter Property="Cursor"
                    Value="Hand"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="#489BA0"/>

                <Setter Property="BorderBrush"
                        Value="#255053"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
    
    <!--#region Add/Edit Window -->
    <Style x:Key="txtBlockAddEdit"
           TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Foreground"
                    Value="#FFF"/>

            <Setter Property="FontSize"
                    Value="16"/>

            <Setter Property="VerticalAlignment"
                    Value="Center"/>

            <Setter Property="Margin"
                    Value="5 0 0 0"/>
        </Style.Setters>
    </Style>

    <Style x:Key="txtBoxAddEdit"
           TargetType="TextBox">
        <Style.Setters>
            <Setter Property="Margin"
                    Value="5 7"/>

            <Setter Property="Background"
                    Value="#94DBDF"/>

            <Setter Property="BorderThickness"
                    Value="0"/>

            <Setter Property="FontSize"
                    Value="16"/>

            <Setter Property="VerticalContentAlignment"
                    Value="Center"/>
        </Style.Setters>
    </Style>

    <Style x:Key="btnSaveChanges"
           TargetType="Button">
        <Style.Setters>
            <Setter Property="Margin"
                    Value="30 5"/>

            <Setter Property="Background"
                    Value="#41C0C7"/>

            <Setter Property="BorderThickness"
                    Value="0"/>

            <Setter Property="Cursor"
                    Value="Hand"/>

            <Setter Property="FontSize"
                    Value="18"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="12">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="#489BA0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="btnCancel"
           TargetType="Button">
        <Style.Setters>
            <Setter Property="Margin"
                    Value="30 5"/>

            <Setter Property="Background"
                    Value="#F6F6F6"/>

            <Setter Property="BorderThickness"
                    Value="0"/>

            <Setter Property="Cursor"
                    Value="Hand"/>

            <Setter Property="FontSize"
                    Value="18"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="12">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="#E2E2E2"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Main Window -->
    <Style x:Key="mainBtn"
           TargetType="Button">
        <Style.Setters>
            <Setter Property="Background"
                    Value="Transparent"/>

            <Setter Property="Foreground"
                    Value="#FFF"/>

            <Setter Property="BorderThickness"
                    Value="0"/>

            <Setter Property="Cursor"
                    Value="Hand"/>

            <Setter Property="FontSize"
                    Value="16"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style x:Key="txtBlockMain"
           TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Foreground"
                    Value="#FFF"/>

            <Setter Property="Margin"
                    Value="7 0 0 0"/>

            <Setter Property="FontSize"
                    Value="20"/>

            <Setter Property="VerticalAlignment"
                    Value="Center"/>
        </Style.Setters>
    </Style>
    <!--#endregion-->
    
    <!--#region Autorization Page -->
    <Style x:Key="txtBlockTitle"
           TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="FontSize"
                    Value="72"/>

            <Setter Property="VerticalAlignment"
                    Value="Center"/>

            <Setter Property="HorizontalAlignment"
                    Value="Center"/>

            <Setter Property="Foreground"
                    Value="#FFF"/>
        </Style.Setters>
    </Style>

    <Style x:Key="txtBoxAuth"
           TargetType="TextBox">
        <Style.Setters>
            <Setter Property="Margin"
                    Value="10 45"/>

            <Setter Property="FontSize"
                    Value="24"/>

            <Setter Property="Background"
                    Value="#94DBDF"/>

            <Setter Property="BorderThickness"
                    Value="0.5"/>

            <Setter Property="VerticalContentAlignment"
                    Value="Center"/>
        </Style.Setters>
    </Style>

    <Style x:Key="pBoxPasswordAuth"
           TargetType="TextBox">
        <Style.Setters>
            <Setter Property="Margin"
                    Value="10 45"/>

            <Setter Property="FontSize"
                    Value="24"/>

            <Setter Property="Background"
                    Value="#94DBDF"/>

            <Setter Property="BorderThickness"
                    Value="0.5"/>

            <Setter Property="VerticalContentAlignment"
                    Value="Center"/>
        </Style.Setters>
    </Style>

    <Style x:Key="btnAutorization"
           TargetType="Button">
        <Style.Setters>
            <Setter Property="Margin"
                    Value="10 40"/>

            <Setter Property="Background"
                    Value="#41C0C7"/>

            <Setter Property="BorderThickness"
                    Value="0"/>

            <Setter Property="Cursor"
                    Value="Hand"/>

            <Setter Property="FontSize"
                    Value="24"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="#489BA0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="txtBlockAdditionalText"
           TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Margin"
                    Value="5 0"/>

            <Setter Property="FontSize"
                    Value="24"/>

            <Setter Property="Foreground"
                    Value="#FFF"/>
        </Style.Setters>
    </Style>

    <Style x:Key="txtBlockLink"
           TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Foreground"
                    Value="#94DBDF"/>

            <Setter Property="FontSize"
                    Value="24"/>

            <Setter Property="Cursor"
                    Value="Hand"/>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="TextDecorations"
                        Value="Underline"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
    
    <!--#region Registration Page -->
    <Style x:Key="txtBoxRegister"
           TargetType="TextBox"
           BasedOn="{StaticResource txtBoxAuth}">
        <Style.Setters>
            <Setter Property="Margin"
                    Value="10 30"/>
        </Style.Setters>
    </Style>

    <Style x:Key="pBoxPasswordRegister"
           TargetType="TextBox"
           BasedOn="{StaticResource pBoxPasswordAuth}">
        <Style.Setters>
            <Setter Property="Margin"
                    Value="10 30"/>
        </Style.Setters>
    </Style>
    
    <Style x:Key="txtBlockTit"
           TargetType="TextBlock"
           BasedOn="{StaticResource txtBlockTitle}">
        <Style.Setters>
            <Setter Property="FontSize"
                    Value="60"/>
        </Style.Setters>
    </Style>

    <Style x:Key="btnRegistration"
           TargetType="Button"
           BasedOn="{StaticResource btnAutorization}">
        <Style.Setters>
            <Setter Property="Margin"
                    Value="7 25"/>
        </Style.Setters>
    </Style>

    <Style x:Key="txtBlockAdditionText"
           TargetType="TextBlock"
           BasedOn="{StaticResource txtBlockAdditionalText}">
        <Style.Setters>
            <Setter Property="Margin"
                    Value="0 0 10 0"/>
        </Style.Setters>
    </Style>
    <!--#endregion-->
   
    <!--#region Main Page -->
    <Style x:Key="txtBoxSearch"
           TargetType="TextBox">
         <Style.Setters>
             <Setter Property="Background"
                     Value="#94DBDF"/>

            <Setter Property="Margin"
                     Value="7"/>
        </Style.Setters>
    </Style>

    <Style x:Key="txtBlockPoleFiltr"
           TargetType="TextBlock">
         <Style.Setters>
             <Setter Property="FontSize"
                     Value="20"/>

             <Setter Property="VerticalAlignment"
                     Value="Center"/>

             <Setter Property="HorizontalAlignment"
                     Value="Center"/>
         </Style.Setters>
    </Style>

    <Style x:Key="txtBlockMovieName"
           TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="FontSize"
                    Value="40"/>

            <Setter Property="Foreground"
                    Value="White"/>
        </Style.Setters>
    </Style>

    <Style x:Key="txtBlockAdditionalInfo"
           TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="FontSize"
                    Value="20"/>

            <Setter Property="Foreground"
                    Value="White"/>
        </Style.Setters>
    </Style>

    <Style x:Key="txtBlockMovieDescription"
           TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="TextWrapping"
                Value="Wrap"/>
            <Setter Property="FontSize"
                    Value="25"/>
            <Setter Property="Foreground"
                    Value="White"/>
        </Style.Setters>
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
        <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
    <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFECF4FC" Offset="0.0"/>
        <GradientStop Color="#FFDCECFC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
        <GradientStop Color="#FFDCECFC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDAECFC" Offset="0.0"/>
        <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
        <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot"
                            Background="#94DBDF"
                            BorderThickness="0"
                            SnapsToDevicePixels="true"
                            CornerRadius="10"
                            Margin="10">
                        <Border x:Name="splitBorder"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                HorizontalAlignment="Right"
                                Margin="0"
                                SnapsToDevicePixels="true"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="arrow"
                                  Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                  Fill="#000"
                                  HorizontalAlignment="Center"
                                  Margin="0"
                                  VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="cmbBoxFilterSort" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
    
    <!--#region Personal Account Page -->
    <Style x:Key="btnBack"
           TargetType="Button">
        <Style.Setters>
            <Setter Property="Background"
                    Value="Transparent"/>

            <Setter Property="Cursor"
                    Value="Hand"/>

            <Setter Property="Foreground"
                    Value="#FFF"/>

            <Setter Property="BorderThickness"
                    Value="0"/>

            <Setter Property="FontSize"
                    Value="16"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="#515151"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="txtBlockPersonalInfo"
           TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="FontSize"
                    Value="36"/>

            <Setter Property="Foreground"
                    Value="#FFF"/>

            <Setter Property="VerticalAlignment"
                    Value="Center"/>
        </Style.Setters>
    </Style>

    <Style x:Key="txtBoxPersonalInfo"
           TargetType="TextBox">
        <Style.Setters>
            <Setter Property="Foreground"
                    Value="#FFF"/>

            <Setter Property="Background"
                    Value="#94DBDF"/>

            <Setter Property="Margin"
                    Value="15 25"/>

            <Setter Property="BorderThickness"
                    Value="0"/>

            <Setter Property="FontSize"
                    Value="26"/>

            <Setter Property="VerticalContentAlignment"
                    Value="Center"/>
        </Style.Setters>
    </Style>

    <Style x:Key="dPicBirthDate"
           TargetType="DatePicker">
        <Style.Setters>
            <Setter Property="FontSize"
                    Value="32"/>

            <Setter Property="Margin"
                    Value="15 20"/>

            <Setter Property="VerticalContentAlignment"
                    Value="Center"/>

            <Setter Property="BorderThickness"
                    Value="0"/>
        </Style.Setters>
    </Style>

    <Style x:Key="lViewMyAditionalInfo"
           TargetType="ListView">
        <Style.Setters>
            <Setter Property="Background"
                    Value="#94DBDF"/>

            <Setter Property="Foreground"
                    Value="#FFF"/>

            <Setter Property="BorderThickness"
                    Value="0"/>

            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Hidden"/>
        </Style.Setters>
    </Style>

    <Style x:Key="tabItemInfo"
           TargetType="TabItem">
        <Style.Setters>
            <Setter Property="FontSize"
                    Value="24"/>

            <Setter Property="Foreground"
                    Value="#000"/>

            <Setter Property="Background"
                    Value="#72A8AC"/>

            <Setter Property="Cursor"
                    Value="Hand"/>
        </Style.Setters>

        <!--<Style.Triggers>
            <DataTrigger Binding="{Binding IsSelected, 
                                   RelativeSource={RelativeSource Self}}"
                         Value="True">
                <Setter Property="Background"
                        Value="#72A8AC"/>
            </DataTrigger>
        </Style.Triggers>-->
    </Style>

    <Style x:Key="listViewSelect"
           TargetType="ListViewItem">
        <Style.Setters>
            <Setter Property="BorderThickness"
                    Value="0"/>

            <Setter Property="BorderBrush"
                    Value="DimGray"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid x:Name="Grid">
                            <Border x:Name="SimpleBackground"
                                    Visibility="Visible"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"/>
                            <Border x:Name="OnSelectedBackground"
                                    Visibility="Collapsed"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{x:Null}"/>
                            <ContentPresenter x:Name="ContentPresenter"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter TargetName="OnSelectedBackground"
                                        Property="Visibility"
                                        Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsSelected"
                                     Value="False">
                                <Setter TargetName="OnSelectedBackground"
                                        Property="Visibility"
                                        Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style x:Key="txtBlockMyTickets"
           TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Foreground"
                    Value="#FFF"/>

            <Setter Property="Margin"
                    Value="0 35"/>
        </Style.Setters>
    </Style>

    <Style x:Key="stcPanelMyTickets"
           TargetType="StackPanel">
        <Style.Setters>
            <Setter Property="Orientation"
                    Value="Vertical"/>
        </Style.Setters>
    </Style>
    <!--#endregion-->
    
    <!--#region Film Page -->
    <Style x:Key="GreenArmchairButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="White"/>
        
        <Setter Property="BorderBrush"
                Value="White"/>
        
        <Setter Property="Margin"
                Value="35,28,35,28"/>
        
        <Setter Property="Padding"
                Value="5"/>
        
        <Setter Property="HorizontalAlignment"
                Value="Center"/>
        
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        
        <Setter Property="FontWeight"
                Value="Bold"/>
        
        <Setter Property="FontSize"
                Value="30"/>
        
        <Setter Property="Foreground"
                Value="#2B2B2B"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image Source="//Images/Chairs/ArmchairGreen.png"
                               Stretch="Fill"/>
                        <TextBlock Text="{TemplateBinding Content}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"/>
                        <Rectangle x:Name="rectangle"
                                   Fill="#489BA0"
                                   Opacity="0.5"
                                   Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="rectangle"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PurpleArmchairButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="White"/>
        
        <Setter Property="BorderBrush"
                Value="White"/>
        
        <Setter Property="Margin"
                Value="35,28,35,28"/>
        
        <Setter Property="Padding"
                Value="5"/>
        
        <Setter Property="HorizontalAlignment"
                Value="Center"/>
        
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        
        <Setter Property="FontWeight"
                Value="Bold"/>
        
        <Setter Property="FontSize"
                Value="30"/>
        
        <Setter Property="Foreground"
                Value="#2B2B2B"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image Source="//Images/Chairs/ArmchairPurple.png"
                               Stretch="Fill"/>
                        <TextBlock Text="{TemplateBinding Content}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"/>
                        <Rectangle x:Name="rectangle"
                                   Fill="#489BA0"
                                   Opacity="0.5"
                                   Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="rectangle"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GreyArmchairButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="White"/>
        
        <Setter Property="BorderBrush"
                Value="White"/>
        
        <Setter Property="Margin"
                Value="35,28,35,28"/>
        
        <Setter Property="Padding"
                Value="5"/>
        
        <Setter Property="HorizontalAlignment"
                Value="Center"/>
        
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        
        <Setter Property="FontWeight"
                Value="Bold"/>
        
        <Setter Property="FontSize"
                Value="30"/>
        
        <Setter Property="Foreground"
                Value="#2B2B2B"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image Source="//Images/Chairs/ArmchairGrey.png"
                               Stretch="Fill"/>
                        <TextBlock Text="{TemplateBinding Content}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"/>
                        <Rectangle x:Name="rectangle"
                                   Fill="#489BA0"
                                   Opacity="0.5"
                                   Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="rectangle"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BuyingTicketButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="#5BB4C6"/>

        <Setter Property="BorderBrush"
                Value="#307989"/>

        <Setter Property="BorderThickness"
                Value="2"/>

        <Setter Property="Margin"
                Value="15,55,15,55"/>

        <Setter Property="Padding"
                Value="5,0"/>

        <Setter Property="FontWeight"
                Value="Bold"/>

        <Setter Property="FontSize"
                Value="16"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <TextBlock Text="{TemplateBinding Content}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"/>
                            <Rectangle x:Name="rectangle2"
                                       Fill="Gray"
                                       Opacity="0.5"
                                       Visibility="Collapsed"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="rectangle2"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="txtBlockTicketBuying"
           TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Foreground"
                    Value="#FFF"/>
        </Style.Setters>
    </Style>

    <Style x:Key="txtBlockRowCount"
           TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="VerticalAlignment"
                    Value="Center"/>

            <Setter Property="HorizontalAlignment"
                    Value="Left"/>

            <Setter Property="FontWeight"
                    Value="Bold"/>

            <Setter Property="FontSize"
                    Value="20"/>

            <Setter Property="Foreground"
                    Value="#FFF"/>
        </Style.Setters>
    </Style>
    <!--#endregion-->
</ResourceDictionary>